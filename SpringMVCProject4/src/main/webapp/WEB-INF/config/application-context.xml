<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- AOP 등록 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 사용자 정의 클래스 등록 -->
	<context:component-scan base-package="com.sist.*"/>
	<!-- 
		제외 : ~VO (사용자 정의 데이터형), 인터페이스
		선택적 메모리 할당 어노테이션 
		@Component, => 일반 클래스 (데이터 수집, 분석) ~Manager 
		@Repository, => 저장소 (~DAO) 
		@Service, => DAO 여러개를 묶어서 한 번에 처리 ~Service
		@Controller, => 사용자 요청 처리 ~Controller => Model (Controller로부터 요청 처리 위임) => 요청 처리 후 반드시 파일 지정 (JSP 제어) 
																						forward(화면 출력을 위해 request 전송) / redirect(재전송, request 전송 x)
																						화면 제어 => JSP / HTML (Thymeleaf) => 제어문 th:each, th:if, ...
		    Front Controller == Controller
		    ================
		    DispatcherServlet     Model
		    => 요청 받아서 Model로 전송 => JSP로 request, session 전송
		@RestController, => 사용자 요청 처리 (JSP를 제어하지 않고 실제 출력에 필요한 데이터만 전송)
		@ControllerAdvice, => 공통 예외처리 (모든 예외처리)
		@Configuration => XML 대신 자바로 스프링 설정
	-->
	
	<!-- ViewResolver -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/"
		p:suffix=".jsp"
	/>

</beans>
